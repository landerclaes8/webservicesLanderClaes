// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  @@map("products")

  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  prijs       Float     
  soort       String    @db.VarChar(255)
  merk        String    @db.VarChar(255)
  kleur       String    @db.VarChar(255)
  maat        String    @db.VarChar(255)
  stofsoort   String    @db.VarChar(255)

  Orders OrderProduct[]
  

}

model Order{
  @@map("order")

  id          Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id     Int       @db.UnsignedInt
  date        DateTime  @db.DateTime(0)
  orderproduct    OrderProduct[] 

  user        User      @relation(fields: [user_id], references: [id]) 

}

model OrderProduct{
  @@map("orderProduct")

  orderId       Int        @db.UnsignedInt  
  productId     Int        @db.UnsignedInt
  aantal        Int

  order        Order       @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product      Product     @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@id([orderId, productId])

}

model User{
  @@map("user")

  id          Int        @id @default(autoincrement()) @db.UnsignedInt
  name        String     @unique(map: "idx_user_name_unique") @db.VarChar(255)
  email       String     @unique(map: "idx_user_email_unique") @db.VarChar(255)
  password_hash  String  @db.VarChar(255)
  roles        Json
  orders      Order[]

}

